#! /usr/bin/env zsh

#	listCompletions: lists all available completions
#	-------------------------------------------------------------------
function listCompletions () {
	for command completion in ${(kv)_comps:#-*(-|-,*)}
	do
		printf "%-32s %s\n" $command $completion
	done | sort
}

#	extract:		Extract most know archives with one command
#	-------------------------------------------------------------------
function extract () {
	if [ -f "$1" ] ; then
		case $1 in
			*.tar.bz2)   tar xjf "$1"     ;;
			*.tar.gz)    tar xzf "$1"     ;;
			*.bz2)       bunzip2 "$1"     ;;
			*.rar)       unrar e "$1"     ;;
			*.gz)        gunzip "$1"      ;;
			*.tar)       tar xf "$1"      ;;
			*.tbz2)      tar xjf "$1"     ;;
			*.tgz)       tar xzf "$1"     ;;
			*.zip)       unzip "$1"       ;;
			*.Z)         uncompress "$1"  ;;
			*.7z)        7z x "$1"        ;;
			*)     echo "'$1' cannot be extracted via extract()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

#	kopy:			Send stdin to kopy.io
#	-------------------------------------------------------------------
function kopy () {
	a=$(cat);
	curl -X POST -s -d "raw:$a" http://kopy.io/documents | awk -F '"' '{print "http://kopy.io/"$4}';
}

#	dadjoke:		Fetches a dadjoke straight to the terminal
#	-------------------------------------------------------------------
function dadjoke() {
	curl -w '\n' -H "Accept: text/plain" https://icanhazdadjoke.com/
}

#	mp4:			Input video file and convert it to mp4
#	-------------------------------------------------------------------
function mp4() {
	_fileName=$(basename "$1")
	ffmpeg -i "$1" "${_fileName%.*}.mp4"
}

#	nodeSHA256:		Calculate the SHA256 of a node version tarball
#	-------------------------------------------------------------------
function nodeSHA256() {
	NODE_VERSION=$1
	echo "Fetching ARM64 checksum for node $NODE_VERSION"
	curl -s "https://nodejs.org/dist/$NODE_VERSION/node-$NODE_VERSION-linux-arm64.tar.gz" | gsha256sum | awk '{print $1}'

	echo "Fetching X86 checksum for node $NODE_VERSION"
	curl -s "https://nodejs.org/dist/$NODE_VERSION/node-$NODE_VERSION-linux-x64.tar.gz" | gsha256sum | awk '{print $1}'
}

#	pdf417:			Generate a PDF417 SVG image
#	-------------------------------------------------------------------
function pdf417() {
	curl "http://www.barcode-generator.org/zint/api.php?bc_number=55&bc_download=1&bc_format=1&bc_size=s&bc_data=$1" | pbcopy
}

#	tusDelete:		Delete a tus upload
#	-------------------------------------------------------------------
function tusDelete() {
	curl -X DELETE -H 'Tus-Resumable: 1.0.0' "$@"
}

#	deleteCWD:		Prompts the user to delete the current directory
#					Usually used to delete a temporary directory created
# 					by `mktemp -d`
#	-------------------------------------------------------------------
function deleteCWD() {
	CWD=$(pwd)
	if read -q "choice?[y/N] to delete $CWD: "; then
		echo
		cd $HOME
		rm -rf $CWD
	else
		echo
		echo "Cancelled."
	fi

	unset CWD
}
